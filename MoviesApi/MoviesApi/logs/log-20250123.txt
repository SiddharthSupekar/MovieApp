2025-01-23 15:40:15.736 +05:30 [INF] User profile is available. Using 'C:\Users\siddharthsupekar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-23 15:40:16.149 +05:30 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert.
2025-01-23 15:40:16.242 +05:30 [INF] Now listening on: https://localhost:7014
2025-01-23 15:40:16.245 +05:30 [INF] Now listening on: http://localhost:5075
2025-01-23 15:40:16.322 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-01-23 15:40:16.325 +05:30 [INF] Hosting environment: Development
2025-01-23 15:40:16.326 +05:30 [INF] Content root path: C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi
2025-01-23 15:40:16.937 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/swagger - null null
2025-01-23 15:40:17.164 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/swagger - 301 0 null 231.9605ms
2025-01-23 15:40:17.173 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/swagger/index.html - null null
2025-01-23 15:40:17.334 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/swagger/index.html - 200 null text/html;charset=utf-8 160.8257ms
2025-01-23 15:40:17.348 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/swagger/swagger-ui.css - null null
2025-01-23 15:40:17.352 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/swagger/swagger-ui-bundle.js - null null
2025-01-23 15:40:17.355 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/swagger/swagger-ui-standalone-preset.js - null null
2025-01-23 15:40:17.361 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/_framework/aspnetcore-browser-refresh.js - null null
2025-01-23 15:40:17.371 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/_vs/browserLink - null null
2025-01-23 15:40:17.412 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/_framework/aspnetcore-browser-refresh.js - 200 13754 application/javascript; charset=utf-8 56.7369ms
2025-01-23 15:40:17.442 +05:30 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-01-23 15:40:17.441 +05:30 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-01-23 15:40:17.448 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/swagger/swagger-ui-standalone-preset.js - 200 339486 text/javascript 94.0666ms
2025-01-23 15:40:17.453 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/swagger/swagger-ui.css - 200 143943 text/css 112.8029ms
2025-01-23 15:40:17.505 +05:30 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-01-23 15:40:17.508 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/swagger/swagger-ui-bundle.js - 200 1096145 text/javascript 159.2858ms
2025-01-23 15:40:17.525 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/_vs/browserLink - 200 null text/javascript; charset=UTF-8 154.2403ms
2025-01-23 15:40:17.822 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/swagger/v1/swagger.json - null null
2025-01-23 15:40:18.025 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 204.103ms
2025-01-23 15:40:26.098 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/User/user-login - null null
2025-01-23 15:40:26.103 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:40:26.105 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/User/user-login - 204 null null 7.791ms
2025-01-23 15:40:26.111 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7014/api/User/user-login - application/json 57
2025-01-23 15:40:26.119 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:40:26.255 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
 ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)
   --- End of inner exception stack trace ---
2025-01-23 15:40:26.282 +05:30 [INF] Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
2025-01-23 15:40:26.287 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.UserController.userLogin (MoviesApi)'
2025-01-23 15:40:26.317 +05:30 [INF] Route matched with {action = "userLogin", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] userLogin(App.Core.Dtos.LoginDto) on controller MoviesApi.Controllers.UserController (MoviesApi).
2025-01-23 15:40:28.088 +05:30 [INF] Executed DbCommand (65ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[email] = @__email_0
2025-01-23 15:40:28.505 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__roleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [r].[roleId], [r].[roleName]
FROM [Roles] AS [r]
WHERE [r].[roleId] = @__roleId_0
2025-01-23 15:40:28.541 +05:30 [INF] User with email davisiduardo@gmail.com logged in successfully
2025-01-23 15:40:28.547 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 15:40:28.557 +05:30 [INF] Executed action MoviesApi.Controllers.UserController.userLogin (MoviesApi) in 2233.7554ms
2025-01-23 15:40:28.560 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.UserController.userLogin (MoviesApi)'
2025-01-23 15:40:28.567 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7014/api/User/user-login - 200 null application/json; charset=utf-8 2456.2618ms
2025-01-23 15:40:28.590 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:40:28.595 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:40:28.597 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 7.8607ms
2025-01-23 15:40:28.605 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:40:28.610 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:40:28.644 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:40:28.650 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:40:29.079 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:40:29.085 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:40:29.088 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:40:29.094 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 440.6125ms
2025-01-23 15:40:29.096 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:40:29.097 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 492.6844ms
2025-01-23 15:40:29.136 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg - null null
2025-01-23 15:40:29.136 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg - null null
2025-01-23 15:40:29.136 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg - null null
2025-01-23 15:40:29.136 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg - null null
2025-01-23 15:40:29.136 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:40:29.136 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg - null null
2025-01-23 15:40:29.158 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 22.2763ms
2025-01-23 15:40:29.171 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:40:29.191 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg'
2025-01-23 15:40:29.195 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg'
2025-01-23 15:40:29.195 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg'
2025-01-23 15:40:29.199 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg'
2025-01-23 15:40:29.199 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg'
2025-01-23 15:40:29.202 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg - 200 10153 image/jpeg 61.5448ms
2025-01-23 15:40:29.203 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg - 200 8327 image/jpeg 59.3899ms
2025-01-23 15:40:29.203 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg - 200 10153 image/jpeg 63.8484ms
2025-01-23 15:40:29.214 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg - 200 4637 image/jpeg 67.8706ms
2025-01-23 15:40:29.214 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg - 200 4637 image/jpeg 66.0209ms
2025-01-23 15:40:38.460 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:40:38.464 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:40:38.466 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 6.171ms
2025-01-23 15:40:38.470 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:40:38.473 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:40:38.474 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:40:38.476 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:40:38.501 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:40:38.504 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:40:38.506 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:40:38.507 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 28.9867ms
2025-01-23 15:40:38.509 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:40:38.510 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 40.2825ms
2025-01-23 15:40:38.529 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:40:38.534 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.2882ms
2025-01-23 15:40:38.538 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:41:48.869 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:41:48.873 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:41:48.875 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 5.3852ms
2025-01-23 15:41:48.880 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:41:48.886 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:41:48.888 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:41:48.890 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:41:48.911 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:41:48.916 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:41:48.918 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:41:48.921 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 27.7895ms
2025-01-23 15:41:48.923 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:41:48.925 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 45.3048ms
2025-01-23 15:41:48.980 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:41:48.986 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.9124ms
2025-01-23 15:41:48.991 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:41:49.041 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:41:49.043 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:41:49.047 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:11:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 15:41:49.055 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:11:49'.
2025-01-23 15:41:49.057 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:41:49.059 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:41:49.067 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:41:49.071 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:41:49.073 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:41:49.074 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 12.6561ms
2025-01-23 15:41:49.076 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:41:49.077 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 36.6233ms
2025-01-23 15:41:49.086 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:41:49.089 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 2.9953ms
2025-01-23 15:41:49.092 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:41:57.016 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:41:57.022 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:41:57.023 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 7.4656ms
2025-01-23 15:41:57.029 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:41:57.034 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:41:57.035 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:11:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 15:41:57.041 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:11:57'.
2025-01-23 15:41:57.044 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:41:57.046 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:41:57.052 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:41:57.056 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:41:57.059 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:41:57.062 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 14.1302ms
2025-01-23 15:41:57.064 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:41:57.066 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 36.5808ms
2025-01-23 15:41:57.091 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:41:57.097 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 6.4792ms
2025-01-23 15:41:57.101 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:02.012 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:02.017 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:02.019 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:12:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 15:42:02.021 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:12:02'.
2025-01-23 15:42:02.023 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:02.024 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:02.037 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:02.047 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:02.050 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:02.053 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 25.3458ms
2025-01-23 15:42:02.056 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:02.057 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 45.8786ms
2025-01-23 15:42:02.076 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:02.080 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.5831ms
2025-01-23 15:42:02.083 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:07.000 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:07.003 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:07.004 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 4.9332ms
2025-01-23 15:42:07.012 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:07.016 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:07.018 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:12:07'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 15:42:07.020 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:12:07'.
2025-01-23 15:42:07.022 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:07.024 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:07.037 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:07.041 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:07.042 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:07.045 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 17.2348ms
2025-01-23 15:42:07.046 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:07.048 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 36.1925ms
2025-01-23 15:42:07.056 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:07.059 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.5541ms
2025-01-23 15:42:07.064 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:19.148 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:19.153 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:19.155 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 7.612ms
2025-01-23 15:42:19.162 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:19.166 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:19.168 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:19.170 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:19.185 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:19.192 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:19.194 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:19.195 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 21.7064ms
2025-01-23 15:42:19.197 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:19.199 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 38.1912ms
2025-01-23 15:42:19.219 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:19.224 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.8168ms
2025-01-23 15:42:19.242 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:25.397 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:25.402 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:25.403 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 7.0701ms
2025-01-23 15:42:25.411 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:25.414 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:25.417 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:12:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 15:42:25.420 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:12:25'.
2025-01-23 15:42:25.422 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:25.424 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:25.440 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:25.445 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:25.447 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:25.449 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 21.1975ms
2025-01-23 15:42:25.452 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:25.454 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 43.199ms
2025-01-23 15:42:25.480 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:25.485 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.6226ms
2025-01-23 15:42:25.488 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:25.999 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:26.002 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:26.004 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:26.006 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:26.024 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:26.027 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:26.028 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:26.030 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 18.5553ms
2025-01-23 15:42:26.032 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:26.034 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 35.1085ms
2025-01-23 15:42:26.048 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:26.052 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.9682ms
2025-01-23 15:42:26.058 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:26.152 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:26.157 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:26.159 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:12:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 15:42:26.164 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:12:26'.
2025-01-23 15:42:26.166 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:26.168 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:26.175 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:26.180 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:26.181 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:26.183 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 11.0048ms
2025-01-23 15:42:26.184 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:26.185 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 33.3664ms
2025-01-23 15:42:26.193 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:26.198 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.7644ms
2025-01-23 15:42:26.202 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:27.381 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:27.385 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:27.393 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:27.394 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:27.418 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:27.423 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:27.425 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:27.427 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 25.7084ms
2025-01-23 15:42:27.428 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:27.430 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 49.1438ms
2025-01-23 15:42:27.442 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:27.445 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.0591ms
2025-01-23 15:42:27.450 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:27.630 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:27.634 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:27.636 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:27.637 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:27.652 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:27.659 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:27.663 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:27.670 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 29.0269ms
2025-01-23 15:42:27.672 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:27.674 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 44.3142ms
2025-01-23 15:42:27.689 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:27.693 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.4787ms
2025-01-23 15:42:27.696 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:31.674 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/User/user-login - null null
2025-01-23 15:42:31.678 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:31.679 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/User/user-login - 204 null null 5.4139ms
2025-01-23 15:42:31.686 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7014/api/User/user-login - application/json 55
2025-01-23 15:42:31.688 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:31.690 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
 ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)
   --- End of inner exception stack trace ---
2025-01-23 15:42:31.694 +05:30 [INF] Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
2025-01-23 15:42:31.697 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.UserController.userLogin (MoviesApi)'
2025-01-23 15:42:31.699 +05:30 [INF] Route matched with {action = "userLogin", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] userLogin(App.Core.Dtos.LoginDto) on controller MoviesApi.Controllers.UserController (MoviesApi).
2025-01-23 15:42:31.707 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[email] = @__email_0
2025-01-23 15:42:31.967 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__roleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [r].[roleId], [r].[roleName]
FROM [Roles] AS [r]
WHERE [r].[roleId] = @__roleId_0
2025-01-23 15:42:31.972 +05:30 [INF] User with email siddhart@gmail.com logged in successfully
2025-01-23 15:42:31.973 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 15:42:31.975 +05:30 [INF] Executed action MoviesApi.Controllers.UserController.userLogin (MoviesApi) in 274.1052ms
2025-01-23 15:42:31.977 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.UserController.userLogin (MoviesApi)'
2025-01-23 15:42:31.978 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7014/api/User/user-login - 200 null application/json; charset=utf-8 292.6215ms
2025-01-23 15:42:31.988 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:31.992 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:31.994 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 6.1532ms
2025-01-23 15:42:32.002 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:32.005 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:32.007 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:32.008 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:32.015 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:32.018 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:32.019 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:32.022 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 10.7415ms
2025-01-23 15:42:32.023 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:32.025 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 23.2456ms
2025-01-23 15:42:32.046 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:32.052 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 6.0789ms
2025-01-23 15:42:32.056 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:39.812 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:39.817 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:39.818 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 6.2285ms
2025-01-23 15:42:39.830 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:39.834 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:39.837 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:39.839 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:39.862 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:39.867 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:39.869 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:39.872 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 28.2144ms
2025-01-23 15:42:39.874 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:39.878 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 48.2332ms
2025-01-23 15:42:39.904 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:39.911 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 7.4897ms
2025-01-23 15:42:39.917 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:40.031 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:40.033 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:40.036 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:12:40'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 15:42:40.042 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:12:40'.
2025-01-23 15:42:40.045 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:40.047 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:40.054 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:40.058 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:40.060 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:40.063 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 12.4813ms
2025-01-23 15:42:40.065 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:40.066 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 36.0141ms
2025-01-23 15:42:40.076 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:40.080 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.6901ms
2025-01-23 15:42:40.084 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:43.759 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:43.763 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:43.765 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:43.767 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:43.782 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:43.785 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:43.786 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:43.789 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 18.5292ms
2025-01-23 15:42:43.791 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:43.793 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 35.2022ms
2025-01-23 15:42:43.816 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:43.819 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.8768ms
2025-01-23 15:42:43.823 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:42:44.043 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:42:44.047 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:42:44.048 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:12:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 15:42:44.055 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:12:44'.
2025-01-23 15:42:44.059 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:44.061 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:42:44.077 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:42:44.081 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:42:44.082 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:42:44.084 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 20.4865ms
2025-01-23 15:42:44.085 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:42:44.086 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 43.5195ms
2025-01-23 15:42:44.097 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:42:44.101 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.7614ms
2025-01-23 15:42:44.104 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 15:43:16.240 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:43:16.244 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:43:16.245 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 5.2382ms
2025-01-23 15:43:16.251 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 15:43:16.255 +05:30 [INF] CORS policy execution successful.
2025-01-23 15:43:16.257 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:13:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 15:43:16.261 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:13:16'.
2025-01-23 15:43:16.262 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:43:16.264 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 15:43:16.303 +05:30 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 15:43:16.306 +05:30 [INF] Retrieved 5 movies
2025-01-23 15:43:16.308 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 15:43:16.309 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 42.5784ms
2025-01-23 15:43:16.312 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 15:43:16.315 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 63.817ms
2025-01-23 15:43:16.585 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 15:43:16.591 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.9653ms
2025-01-23 15:43:16.597 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:07:07.428 +05:30 [INF] User profile is available. Using 'C:\Users\siddharthsupekar\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-01-23 16:07:07.688 +05:30 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert.
2025-01-23 16:07:07.772 +05:30 [INF] Now listening on: https://localhost:7014
2025-01-23 16:07:07.774 +05:30 [INF] Now listening on: http://localhost:5075
2025-01-23 16:07:07.870 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-01-23 16:07:07.872 +05:30 [INF] Hosting environment: Development
2025-01-23 16:07:07.874 +05:30 [INF] Content root path: C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi
2025-01-23 16:07:08.953 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/swagger - null null
2025-01-23 16:07:09.141 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/swagger - 301 0 null 197.1069ms
2025-01-23 16:07:09.151 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/swagger/index.html - null null
2025-01-23 16:07:09.215 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/swagger/index.html - 200 null text/html;charset=utf-8 64.0156ms
2025-01-23 16:07:09.222 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/swagger/swagger-ui-bundle.js - null null
2025-01-23 16:07:09.222 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/swagger/swagger-ui.css - null null
2025-01-23 16:07:09.229 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/swagger/swagger-ui-standalone-preset.js - null null
2025-01-23 16:07:09.229 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/_framework/aspnetcore-browser-refresh.js - null null
2025-01-23 16:07:09.248 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/_vs/browserLink - null null
2025-01-23 16:07:09.259 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/_framework/aspnetcore-browser-refresh.js - 200 13754 application/javascript; charset=utf-8 26.9496ms
2025-01-23 16:07:09.298 +05:30 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-01-23 16:07:09.299 +05:30 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-01-23 16:07:09.305 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/swagger/swagger-ui.css - 200 143943 text/css 79.8604ms
2025-01-23 16:07:09.311 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/swagger/swagger-ui-standalone-preset.js - 200 339486 text/javascript 76.5388ms
2025-01-23 16:07:09.320 +05:30 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-01-23 16:07:09.323 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/swagger/swagger-ui-bundle.js - 200 1096145 text/javascript 100.9083ms
2025-01-23 16:07:09.338 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/_vs/browserLink - 200 null text/javascript; charset=UTF-8 89.8591ms
2025-01-23 16:07:09.523 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/swagger/v1/swagger.json - null null
2025-01-23 16:07:09.650 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 127.6858ms
2025-01-23 16:07:15.385 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:07:15.394 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:15.397 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 12.3537ms
2025-01-23 16:07:15.404 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:07:15.411 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:15.591 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:37:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:07:15.613 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:37:15'.
2025-01-23 16:07:15.618 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:07:15.647 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:07:17.223 +05:30 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:07:17.249 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:07:17.256 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:07:17.268 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 1615.423ms
2025-01-23 16:07:17.271 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:07:17.280 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 1875.7076ms
2025-01-23 16:07:17.299 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:07:17.304 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.582ms
2025-01-23 16:07:17.308 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:07:19.321 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=a&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:07:19.325 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:19.326 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=a&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 5.0928ms
2025-01-23 16:07:19.331 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=a&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:07:19.334 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:19.337 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:37:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:07:19.341 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:37:19'.
2025-01-23 16:07:19.343 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:07:19.353 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:07:19.522 +05:30 [INF] Executed DbCommand (57ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:07:19.621 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:07:19.635 +05:30 [INF] Retrieved 4 movies matching the search title a
2025-01-23 16:07:19.638 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:07:19.644 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 286.7703ms
2025-01-23 16:07:19.647 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:07:19.649 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=a&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 318.3202ms
2025-01-23 16:07:21.042 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=as&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:07:21.062 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:21.064 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=as&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 24.6318ms
2025-01-23 16:07:21.069 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=as&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:07:21.072 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:21.074 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:37:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:07:21.077 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:37:21'.
2025-01-23 16:07:21.078 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:07:21.079 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:07:21.100 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:07:21.107 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:07:21.111 +05:30 [INF] Retrieved 3 movies matching the search title as
2025-01-23 16:07:21.114 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:07:21.117 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 34.2368ms
2025-01-23 16:07:21.118 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:07:21.120 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=as&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 50.6525ms
2025-01-23 16:07:21.505 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=asd&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:07:21.508 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:21.509 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=asd&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 4.5718ms
2025-01-23 16:07:21.513 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=asd&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:07:21.516 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:21.518 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:37:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:07:21.522 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:37:21'.
2025-01-23 16:07:21.525 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:07:21.526 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:07:21.535 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:07:21.541 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:07:21.544 +05:30 [INF] Retrieved 3 movies matching the search title asd
2025-01-23 16:07:21.546 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:07:21.547 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 18.8481ms
2025-01-23 16:07:21.549 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:07:21.550 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=asd&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 37.157ms
2025-01-23 16:07:22.537 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:07:22.541 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:22.542 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 5.7554ms
2025-01-23 16:07:22.546 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:07:22.549 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:22.550 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:37:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:07:22.554 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:37:22'.
2025-01-23 16:07:22.556 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:07:22.557 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:07:22.564 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:07:22.567 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:07:22.569 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:07:22.572 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 12.7576ms
2025-01-23 16:07:22.573 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:07:22.575 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 29.3864ms
2025-01-23 16:07:56.126 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:07:56.144 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:56.146 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 20.418ms
2025-01-23 16:07:56.159 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:07:56.164 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:56.176 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:07:56.178 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:07:56.205 +05:30 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:07:56.209 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:07:56.210 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:07:56.213 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 31.7438ms
2025-01-23 16:07:56.215 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:07:56.217 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 57.9395ms
2025-01-23 16:07:56.427 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:07:56.430 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:07:56.432 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:37:56'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:07:56.435 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:37:56'.
2025-01-23 16:07:56.436 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:07:56.437 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:07:56.759 +05:30 [INF] Executed DbCommand (319ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:07:56.764 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:07:56.768 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:07:56.771 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:07:56.776 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 335.962ms
2025-01-23 16:07:56.778 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:07:56.780 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 12.6903ms
2025-01-23 16:07:56.786 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 360.2201ms
2025-01-23 16:07:56.792 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:07:56.797 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:07:56.802 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.4552ms
2025-01-23 16:07:56.807 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:08:06.517 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=a&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:06.522 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:06.525 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=a&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 8.4078ms
2025-01-23 16:08:06.532 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=a&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:06.536 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:06.538 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:08:06.541 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:06'.
2025-01-23 16:08:06.542 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:06.543 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:08:06.554 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:08:06.566 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:08:06.569 +05:30 [INF] Retrieved 4 movies matching the search title a
2025-01-23 16:08:06.570 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:08:06.572 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 26.5929ms
2025-01-23 16:08:06.574 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:06.575 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=a&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 43.6868ms
2025-01-23 16:08:09.273 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=adsa&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:09.276 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:09.277 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=adsa&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 4.6838ms
2025-01-23 16:08:09.282 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=adsa&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:09.285 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:09.286 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:09'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:08:09.289 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:09'.
2025-01-23 16:08:09.290 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:09.292 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:08:09.303 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:08:09.310 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:08:09.314 +05:30 [INF] Retrieved 0 movies matching the search title adsa
2025-01-23 16:08:09.315 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:08:09.317 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 22.8632ms
2025-01-23 16:08:09.318 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:09.320 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=adsa&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 38.2236ms
2025-01-23 16:08:10.836 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ads&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:10.840 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:10.841 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ads&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 4.6822ms
2025-01-23 16:08:10.846 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ads&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:10.849 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:10.850 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:08:10.853 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:10'.
2025-01-23 16:08:10.854 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:10.855 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:08:10.866 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:08:10.873 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:08:10.877 +05:30 [INF] Retrieved 0 movies matching the search title ads
2025-01-23 16:08:10.878 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:08:10.880 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 22.1885ms
2025-01-23 16:08:10.882 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:10.883 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ads&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 37.9473ms
2025-01-23 16:08:11.409 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:08:11.413 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:11.414 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 5.0268ms
2025-01-23 16:08:11.419 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:08:11.422 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:11.424 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:08:11.427 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:11'.
2025-01-23 16:08:11.428 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:08:11.430 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:08:11.442 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:08:11.446 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:08:11.447 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:08:11.449 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 16.6047ms
2025-01-23 16:08:11.451 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:08:11.452 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 32.846ms
2025-01-23 16:08:12.340 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=d&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:12.345 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:12.346 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=d&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 6.5068ms
2025-01-23 16:08:12.351 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=d&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:12.356 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:12.358 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:08:12.361 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:12'.
2025-01-23 16:08:12.362 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:12.363 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:08:12.374 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:08:12.383 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:08:12.388 +05:30 [INF] Retrieved 4 movies matching the search title d
2025-01-23 16:08:12.389 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:08:12.392 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 26.3529ms
2025-01-23 16:08:12.393 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:12.395 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=d&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 44.3128ms
2025-01-23 16:08:13.023 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=dsa&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:13.028 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:13.029 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=dsa&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 6.2878ms
2025-01-23 16:08:13.035 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=dsa&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:13.039 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:13.040 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:13'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:08:13.043 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:13'.
2025-01-23 16:08:13.044 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:13.045 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:08:13.056 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:08:13.063 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:08:13.067 +05:30 [INF] Retrieved 0 movies matching the search title dsa
2025-01-23 16:08:13.069 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:08:13.071 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 23.419ms
2025-01-23 16:08:13.073 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:13.074 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=dsa&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 39.4476ms
2025-01-23 16:08:14.018 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=dsda&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:14.022 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:14.023 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=dsda&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 5.7238ms
2025-01-23 16:08:14.028 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=dsda&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:14.031 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:14.032 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:08:14.035 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:14'.
2025-01-23 16:08:14.036 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:14.038 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:08:14.048 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:08:14.056 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:08:14.060 +05:30 [INF] Retrieved 1 movies matching the search title dsda
2025-01-23 16:08:14.061 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:08:14.063 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 23.1994ms
2025-01-23 16:08:14.065 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:14.066 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=dsda&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 38.6394ms
2025-01-23 16:08:15.262 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=dsd&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:15.266 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:15.267 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=dsd&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 5.8156ms
2025-01-23 16:08:15.273 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=dsd&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:08:15.279 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:15.280 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:08:15.283 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:15'.
2025-01-23 16:08:15.285 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:15.286 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:08:15.298 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:08:15.306 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:08:15.310 +05:30 [INF] Retrieved 1 movies matching the search title dsd
2025-01-23 16:08:15.312 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:08:15.315 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 25.7751ms
2025-01-23 16:08:15.317 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:08:15.319 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=dsd&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 46.0614ms
2025-01-23 16:08:15.841 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:08:15.848 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:08:15.850 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:08:15.856 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:38:15'.
2025-01-23 16:08:15.858 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:08:15.859 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:08:15.867 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:08:15.870 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:08:15.872 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:08:15.874 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 12.0513ms
2025-01-23 16:08:15.876 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:08:15.878 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 37.6982ms
2025-01-23 16:12:17.196 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:12:17.205 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:12:17.206 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 10.1356ms
2025-01-23 16:12:17.215 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:12:17.218 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:12:17.220 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:12:17.221 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:12:17.233 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:12:17.236 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:12:17.238 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:12:17.240 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 15.8671ms
2025-01-23 16:12:17.242 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:12:17.244 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 29.2709ms
2025-01-23 16:12:17.257 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:12:17.260 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:12:17.262 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:42:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:12:17.267 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:42:17'.
2025-01-23 16:12:17.269 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:12:17.270 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:12:17.278 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:12:17.288 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:12:17.299 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:12:17.302 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 26.9645ms
2025-01-23 16:12:17.303 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:12:17.305 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 48.0769ms
2025-01-23 16:12:17.827 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:12:17.842 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 14.5015ms
2025-01-23 16:12:17.846 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:12:17.849 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:12:17.852 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.4613ms
2025-01-23 16:12:17.856 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:12:21.636 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=sadas&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:12:21.640 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:12:21.642 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=sadas&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 5.6506ms
2025-01-23 16:12:21.646 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=sadas&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:12:21.650 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:12:21.651 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:42:21'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:12:21.655 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:42:21'.
2025-01-23 16:12:21.657 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:12:21.658 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:12:21.666 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:12:21.672 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:12:21.675 +05:30 [INF] Retrieved 1 movies matching the search title sadas
2025-01-23 16:12:21.676 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:12:21.678 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 15.6603ms
2025-01-23 16:12:21.679 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:12:21.680 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=sadas&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 34.2636ms
2025-01-23 16:12:22.632 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=sadasss&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:12:22.635 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:12:22.636 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=sadasss&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 4.4614ms
2025-01-23 16:12:22.641 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=sadasss&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:12:22.644 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:12:22.647 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:42:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:12:22.650 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:42:22'.
2025-01-23 16:12:22.651 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:12:22.653 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:12:22.659 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:12:22.666 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:12:22.668 +05:30 [INF] Retrieved 0 movies matching the search title sadasss
2025-01-23 16:12:22.670 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:12:22.671 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 16.3915ms
2025-01-23 16:12:22.673 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:12:22.674 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=sadasss&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 32.4374ms
2025-01-23 16:12:24.229 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=sadasssasd&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:12:24.232 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:12:24.233 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=sadasssasd&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 5.4717ms
2025-01-23 16:12:24.239 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=sadasssasd&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:12:24.243 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:12:24.244 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:42:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:12:24.247 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:42:24'.
2025-01-23 16:12:24.248 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:12:24.250 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:12:24.255 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:12:24.262 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:12:24.268 +05:30 [INF] Retrieved 0 movies matching the search title sadasssasd
2025-01-23 16:12:24.270 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:12:24.274 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 22.6028ms
2025-01-23 16:12:24.279 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:12:24.288 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=sadasssasd&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 48.7738ms
2025-01-23 16:12:44.094 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:12:44.099 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:12:44.100 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 5.7293ms
2025-01-23 16:12:44.106 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:12:44.109 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:12:44.111 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:42:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:12:44.114 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:42:44'.
2025-01-23 16:12:44.115 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:12:44.117 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:12:44.134 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:12:44.138 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:12:44.140 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:12:44.142 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 18.9913ms
2025-01-23 16:12:44.144 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:12:44.146 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:12:44.151 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 45.0562ms
2025-01-23 16:12:44.156 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:12:44.158 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:12:44.160 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:12:44.169 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:12:44.174 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:12:44.176 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:12:44.179 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 14.9521ms
2025-01-23 16:12:44.181 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:12:44.184 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:12:44.197 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 52.1111ms
2025-01-23 16:12:44.202 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 18.9612ms
2025-01-23 16:12:44.206 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:12:44.209 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:12:44.212 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.683ms
2025-01-23 16:12:44.215 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:13:01.132 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:13:01.139 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:01.140 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 8.8906ms
2025-01-23 16:13:01.146 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:13:01.151 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:01.153 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:13:01.159 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:01'.
2025-01-23 16:13:01.161 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:01.163 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:13:01.186 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:13:01.190 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:13:01.192 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:13:01.198 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 30.1779ms
2025-01-23 16:13:01.205 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:01.207 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 61.255ms
2025-01-23 16:13:01.219 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:13:01.223 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:01.225 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:01.226 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:13:01.240 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:13:01.250 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:13:01.256 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:13:01.263 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 32.784ms
2025-01-23 16:13:01.272 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:01.275 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 58.9107ms
2025-01-23 16:13:01.280 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:13:01.286 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 6.6091ms
2025-01-23 16:13:01.290 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:13:01.295 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:13:01.299 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.7258ms
2025-01-23 16:13:01.305 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:13:04.569 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=asdasdasdsadas&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:13:04.573 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:04.574 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=asdasdasdsadas&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 4.9765ms
2025-01-23 16:13:04.579 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=asdasdasdsadas&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:13:04.583 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:04.585 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:13:04.589 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:04'.
2025-01-23 16:13:04.591 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:13:04.592 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:13:04.602 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:13:04.610 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:13:04.616 +05:30 [INF] Retrieved 0 movies matching the search title asdasdasdsadas
2025-01-23 16:13:04.617 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:13:04.620 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 25.4439ms
2025-01-23 16:13:04.621 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:13:04.622 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=asdasdasdsadas&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 43.2806ms
2025-01-23 16:13:07.101 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:13:07.106 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:07.107 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 5.4962ms
2025-01-23 16:13:07.111 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:13:07.114 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:07.115 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:07'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:13:07.119 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:07'.
2025-01-23 16:13:07.123 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:07.124 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:13:07.136 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:13:07.139 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:13:07.140 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:13:07.142 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 15.3817ms
2025-01-23 16:13:07.143 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:07.144 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 33.217ms
2025-01-23 16:13:16.686 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=asdasdasdsadassadsda&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:13:16.690 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:16.691 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=asdasdasdsadassadsda&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 4.4969ms
2025-01-23 16:13:16.696 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=asdasdasdsadassadsda&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:13:16.699 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:16.701 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:13:16.705 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:16'.
2025-01-23 16:13:16.706 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:13:16.707 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:13:16.717 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:13:16.726 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:13:16.730 +05:30 [INF] Retrieved 0 movies matching the search title asdasdasdsadassadsda
2025-01-23 16:13:16.731 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:13:16.734 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 24.1685ms
2025-01-23 16:13:16.735 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:13:16.736 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=asdasdasdsadassadsda&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 40.5323ms
2025-01-23 16:13:17.854 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:13:17.859 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:17.860 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 6.3398ms
2025-01-23 16:13:17.864 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:13:17.867 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:17.868 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:17'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:13:17.872 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:17'.
2025-01-23 16:13:17.875 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:17.876 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:13:17.882 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:13:17.885 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:13:17.886 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:13:17.889 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 9.882ms
2025-01-23 16:13:17.891 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:17.892 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 28.0871ms
2025-01-23 16:13:20.516 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:13:20.519 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:20.520 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:20'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:13:20.524 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:20'.
2025-01-23 16:13:20.525 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:20.526 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:13:20.533 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:13:20.535 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:13:20.536 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:13:20.538 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 9.4304ms
2025-01-23 16:13:20.540 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:20.542 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 26.4838ms
2025-01-23 16:13:27.155 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:13:27.160 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:27.161 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 6.5039ms
2025-01-23 16:13:27.167 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:13:27.172 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:27.174 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:27'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:13:27.179 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:43:27'.
2025-01-23 16:13:27.181 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:27.182 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:13:27.189 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:13:27.193 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:13:27.195 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:13:27.197 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 12.2359ms
2025-01-23 16:13:27.199 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:27.200 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 33.0997ms
2025-01-23 16:13:27.267 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:13:27.270 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:13:27.271 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:27.272 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:13:27.279 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:13:27.282 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:13:27.285 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:13:27.287 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 12.8053ms
2025-01-23 16:13:27.290 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:13:27.292 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 25.0359ms
2025-01-23 16:13:27.311 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:13:27.311 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg - null null
2025-01-23 16:13:27.311 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg - null null
2025-01-23 16:13:27.320 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 9.0921ms
2025-01-23 16:13:27.323 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:13:27.333 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:13:27.336 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg - null null
2025-01-23 16:13:27.338 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.5216ms
2025-01-23 16:13:27.343 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:13:27.351 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg - null null
2025-01-23 16:13:27.359 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg'
2025-01-23 16:13:27.359 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg'
2025-01-23 16:13:27.361 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg'
2025-01-23 16:13:27.365 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg - 200 10153 image/jpeg 50.1242ms
2025-01-23 16:13:27.369 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg - null null
2025-01-23 16:13:27.371 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg - null null
2025-01-23 16:13:27.374 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg - 200 8327 image/jpeg 27.1676ms
2025-01-23 16:13:27.371 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg - 200 10153 image/jpeg 53.9212ms
2025-01-23 16:13:27.382 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg - null null
2025-01-23 16:13:27.385 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg - null null
2025-01-23 16:13:27.389 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg'
2025-01-23 16:13:27.392 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg - 200 10153 image/jpeg 40.9681ms
2025-01-23 16:13:27.396 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg'
2025-01-23 16:13:27.398 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg'
2025-01-23 16:13:27.401 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg - 200 10153 image/jpeg 35.8242ms
2025-01-23 16:13:27.405 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg - 200 8327 image/jpeg 41.9714ms
2025-01-23 16:13:27.409 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg'
2025-01-23 16:13:27.411 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg - 200 4637 image/jpeg 29.2911ms
2025-01-23 16:13:27.415 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg'
2025-01-23 16:13:27.417 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg - null null
2025-01-23 16:13:27.420 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg - null null
2025-01-23 16:13:27.423 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg - 200 4637 image/jpeg 35.0833ms
2025-01-23 16:13:27.430 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg'
2025-01-23 16:13:27.432 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg'
2025-01-23 16:13:27.434 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg - 200 4637 image/jpeg 15.3934ms
2025-01-23 16:13:27.437 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg - 200 4637 image/jpeg 18.7995ms
2025-01-23 16:15:49.211 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:15:49.217 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:49.218 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 7.7591ms
2025-01-23 16:15:49.224 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:15:49.227 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:49.229 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:49'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:15:49.232 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:49'.
2025-01-23 16:15:49.233 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:15:49.234 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:15:49.247 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:15:49.250 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:15:49.252 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:15:49.253 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 16.9709ms
2025-01-23 16:15:49.255 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:15:49.257 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:15:49.260 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 36.2004ms
2025-01-23 16:15:49.265 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:49.266 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:15:49.268 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:15:49.274 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:15:49.279 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:15:49.283 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:15:49.287 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 16.3835ms
2025-01-23 16:15:49.294 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:15:49.299 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 43.391ms
2025-01-23 16:15:49.307 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:15:49.312 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.2109ms
2025-01-23 16:15:49.315 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:15:49.317 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:15:49.320 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.1753ms
2025-01-23 16:15:49.323 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:15:52.731 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=s&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:15:52.739 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:52.741 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=s&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 9.9687ms
2025-01-23 16:15:52.747 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=s&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:15:52.751 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:52.752 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:15:52.756 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:52'.
2025-01-23 16:15:52.758 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:15:52.759 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:15:52.765 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:15:52.771 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:15:52.774 +05:30 [INF] Retrieved 4 movies matching the search title s
2025-01-23 16:15:52.776 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:15:52.778 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 16.7095ms
2025-01-23 16:15:52.779 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:15:52.780 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=s&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 33.8328ms
2025-01-23 16:15:55.236 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ssyyyyyyyyy&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:15:55.240 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:55.241 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ssyyyyyyyyy&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 4.6024ms
2025-01-23 16:15:55.246 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ssyyyyyyyyy&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:15:55.251 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:55.252 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:55'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:15:55.256 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:55'.
2025-01-23 16:15:55.257 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:15:55.258 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:15:55.263 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:15:55.271 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:15:55.275 +05:30 [INF] Retrieved 0 movies matching the search title ssyyyyyyyyy
2025-01-23 16:15:55.276 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:15:55.279 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 18.4154ms
2025-01-23 16:15:55.280 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:15:55.282 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ssyyyyyyyyy&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 36.111ms
2025-01-23 16:15:57.789 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ssyyyyyyyy&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:15:57.794 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:57.795 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ssyyyyyyyy&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 6.9625ms
2025-01-23 16:15:57.801 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ssyyyyyyyy&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:15:57.806 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:57.809 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:57'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:15:57.814 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:57'.
2025-01-23 16:15:57.816 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:15:57.818 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:15:57.828 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:15:57.837 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:15:57.843 +05:30 [INF] Retrieved 0 movies matching the search title ssyyyyyyyy
2025-01-23 16:15:57.845 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:15:57.848 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 25.7893ms
2025-01-23 16:15:57.849 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:15:57.852 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ssyyyyyyyy&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 50.6367ms
2025-01-23 16:15:58.149 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ssyyyyyyy&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:15:58.155 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:58.157 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ssyyyyyyy&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 7.9279ms
2025-01-23 16:15:58.163 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ssyyyyyyy&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:15:58.167 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:58.168 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:15:58.172 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:58'.
2025-01-23 16:15:58.173 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:15:58.174 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:15:58.179 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:15:58.184 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:15:58.187 +05:30 [INF] Retrieved 0 movies matching the search title ssyyyyyyy
2025-01-23 16:15:58.188 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:15:58.190 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 13.9366ms
2025-01-23 16:15:58.192 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:15:58.194 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=ssyyyyyyy&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 30.4687ms
2025-01-23 16:15:58.881 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=s&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:15:58.885 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:58.885 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=s&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 5.5418ms
2025-01-23 16:15:58.891 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=s&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:15:58.895 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:58.898 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:58'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:15:58.903 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:58'.
2025-01-23 16:15:58.905 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:15:58.906 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:15:58.913 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:15:58.918 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:15:58.921 +05:30 [INF] Retrieved 4 movies matching the search title s
2025-01-23 16:15:58.922 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:15:58.925 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 15.8167ms
2025-01-23 16:15:58.927 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:15:58.929 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=s&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 37.9703ms
2025-01-23 16:15:59.251 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:15:59.256 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:59.257 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 6.2839ms
2025-01-23 16:15:59.262 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:15:59.265 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:15:59.267 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:59'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:15:59.270 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:45:59'.
2025-01-23 16:15:59.271 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:15:59.272 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:15:59.277 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:15:59.280 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:15:59.282 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:15:59.283 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 9.0261ms
2025-01-23 16:15:59.285 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:15:59.286 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 24.523ms
2025-01-23 16:16:12.236 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:12.241 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:12.243 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 6.3015ms
2025-01-23 16:16:12.253 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:12.257 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:12.259 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:12'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:16:12.263 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:12'.
2025-01-23 16:16:12.265 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:12.266 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:16:12.274 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:16:12.277 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:16:12.278 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:16:12.279 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 10.4922ms
2025-01-23 16:16:12.281 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:12.283 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 29.9145ms
2025-01-23 16:16:12.293 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:16:12.298 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.1332ms
2025-01-23 16:16:12.303 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:16:12.974 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:12.978 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:12.979 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:12.981 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:16:12.990 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:16:12.993 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:16:12.994 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:16:12.996 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 12.3427ms
2025-01-23 16:16:12.998 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:12.999 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 25.3982ms
2025-01-23 16:16:13.012 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:16:13.016 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.5671ms
2025-01-23 16:16:13.020 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:16:15.321 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:16:15.326 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:15.327 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 6.4497ms
2025-01-23 16:16:15.334 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:16:15.339 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:15.341 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:15'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:16:15.344 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:15'.
2025-01-23 16:16:15.346 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:16:15.348 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:16:15.354 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:16:15.360 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:16:15.362 +05:30 [INF] Retrieved 0 movies matching the search title 123
2025-01-23 16:16:15.364 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:16:15.366 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 15.7321ms
2025-01-23 16:16:15.367 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:16:15.369 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 34.4478ms
2025-01-23 16:16:24.448 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:24.471 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:24.476 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 28.2367ms
2025-01-23 16:16:24.506 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:24.516 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:24.521 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:16:24.540 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:24'.
2025-01-23 16:16:24.558 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:24.574 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:16:24.597 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:16:24.601 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:16:24.602 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:16:24.605 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 26.0366ms
2025-01-23 16:16:24.609 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:24.609 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:24.614 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:24.616 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 110.6437ms
2025-01-23 16:16:24.620 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:24.623 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:16:24.629 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:16:24.633 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:16:24.635 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:16:24.641 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:16:24.645 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 18.538ms
2025-01-23 16:16:24.648 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:24.650 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 6.6549ms
2025-01-23 16:16:24.654 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:16:24.657 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 48.4834ms
2025-01-23 16:16:24.674 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:16:24.677 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.2053ms
2025-01-23 16:16:24.680 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:16:25.120 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:25.124 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:25.126 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:16:25.133 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:25'.
2025-01-23 16:16:25.135 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:25.137 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:16:25.142 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:16:25.145 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:16:25.146 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:16:25.149 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 9.764ms
2025-01-23 16:16:25.150 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:25.152 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 31.631ms
2025-01-23 16:16:25.175 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:16:25.178 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.3543ms
2025-01-23 16:16:25.182 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:16:26.041 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:26.045 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:26.048 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:26.049 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:16:26.059 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:16:26.063 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:16:26.065 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:16:26.067 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 14.905ms
2025-01-23 16:16:26.070 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:26.071 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 29.9414ms
2025-01-23 16:16:26.080 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:16:26.083 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 2.7714ms
2025-01-23 16:16:26.087 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:16:26.755 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:16:26.760 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:26.761 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 6.4612ms
2025-01-23 16:16:26.768 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:16:26.772 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:26.774 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:26'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:16:26.781 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:26'.
2025-01-23 16:16:26.784 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:16:26.785 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:16:26.795 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:16:26.802 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:16:26.807 +05:30 [INF] Retrieved 0 movies matching the search title 123
2025-01-23 16:16:26.809 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:16:26.812 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 22.6776ms
2025-01-23 16:16:26.814 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:16:26.815 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 47.5881ms
2025-01-23 16:16:32.668 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:32.671 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:32.673 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 5.0453ms
2025-01-23 16:16:32.680 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:32.683 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:32.685 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:16:32.688 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:32'.
2025-01-23 16:16:32.689 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:32.691 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:16:32.698 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:16:32.701 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:16:32.702 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:16:32.704 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 9.4471ms
2025-01-23 16:16:32.706 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:32.707 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 26.7594ms
2025-01-23 16:16:32.719 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:16:32.722 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.543ms
2025-01-23 16:16:32.728 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:16:33.008 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:33.013 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:33.015 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:33.016 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:16:33.028 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:16:33.032 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:16:33.033 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:16:33.037 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 14.9274ms
2025-01-23 16:16:33.039 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:33.041 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 33.3354ms
2025-01-23 16:16:33.056 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:16:33.060 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.2105ms
2025-01-23 16:16:33.064 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:16:34.383 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:16:34.396 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:34.397 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 14.1176ms
2025-01-23 16:16:34.402 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:16:34.405 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:34.406 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:34'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:16:34.410 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:46:34'.
2025-01-23 16:16:34.411 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:16:34.413 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:16:34.419 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:16:34.424 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:16:34.428 +05:30 [INF] Retrieved 0 movies matching the search title 123
2025-01-23 16:16:34.429 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:16:34.433 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 17.2281ms
2025-01-23 16:16:34.434 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:16:34.435 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 33.8992ms
2025-01-23 16:16:58.168 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:58.179 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:58.181 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 13.5388ms
2025-01-23 16:16:58.192 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:16:58.196 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:16:58.198 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:58.200 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:16:58.207 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:16:58.211 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:16:58.212 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:16:58.215 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 12.9731ms
2025-01-23 16:16:58.218 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:16:58.220 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 28.6723ms
2025-01-23 16:16:58.269 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:16:58.276 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg - null null
2025-01-23 16:16:58.276 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg - null null
2025-01-23 16:16:58.284 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 15.3052ms
2025-01-23 16:16:58.288 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:16:58.292 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg - null null
2025-01-23 16:16:58.302 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg'
2025-01-23 16:16:58.304 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/41180a05-cc88-4c39-9465-02398788c155_ProfilePictureSample3.jpg - 200 10153 image/jpeg 35.1299ms
2025-01-23 16:16:58.308 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg'
2025-01-23 16:16:58.311 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg - null null
2025-01-23 16:16:58.315 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg'
2025-01-23 16:16:58.315 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/94b8821a-f5de-43a9-98ee-89919c435538_ProfilePictureSample3.jpg - 200 10153 image/jpeg 42.1067ms
2025-01-23 16:16:58.321 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/894ade3f-2c8f-46b7-a224-942e01f4efaa_ProfilePictureSAmple4.jpg - 200 8327 image/jpeg 26.047ms
2025-01-23 16:16:58.325 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/uploads/moviePosters/dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg - null null
2025-01-23 16:16:58.330 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg'
2025-01-23 16:16:58.333 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/c6d66c38-9f2e-45d8-b227-0bb4cc4af75c_ProfilePictureSample2.jpg - 200 4637 image/jpeg 24.3534ms
2025-01-23 16:16:58.339 +05:30 [INF] Sending file. Request path: '/uploads/moviePosters/dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg'. Physical path: 'C:\Users\siddharthsupekar\source\repos\MoviesApi\MoviesApi\wwwroot\uploads\moviePosters\dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg'
2025-01-23 16:16:58.342 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/uploads/moviePosters/dd549d11-7922-4500-82d3-49d75d6234da_ProfilePictureSample2.jpg - 200 4637 image/jpeg 20.8114ms
2025-01-23 16:17:00.135 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:00.140 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:00.142 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:00.143 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:00.153 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:00.158 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:17:00.160 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:17:00.163 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 16.3609ms
2025-01-23 16:17:00.165 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:00.167 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 32.4659ms
2025-01-23 16:17:00.192 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:17:00.196 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.864ms
2025-01-23 16:17:00.199 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:17:02.930 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:17:02.935 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:02.937 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 6.3089ms
2025-01-23 16:17:02.943 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:17:02.948 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:02.950 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:02'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:17:02.955 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:02'.
2025-01-23 16:17:02.957 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:17:02.958 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:02.964 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:17:02.970 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:02.974 +05:30 [INF] Retrieved 0 movies matching the search title 123
2025-01-23 16:17:02.975 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:17:02.977 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 16.5986ms
2025-01-23 16:17:02.978 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:17:02.981 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 38.1839ms
2025-01-23 16:17:02.989 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:17:02.992 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.2169ms
2025-01-23 16:17:02.995 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:17:06.691 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:06.698 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:06.700 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 9.164ms
2025-01-23 16:17:06.709 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:06.713 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:06.715 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:06'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:17:06.719 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:06'.
2025-01-23 16:17:06.721 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:06.722 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:06.730 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:06.739 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:17:06.743 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:17:06.756 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 31.0149ms
2025-01-23 16:17:06.760 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:06.763 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 54.1769ms
2025-01-23 16:17:11.200 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:11.205 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:11.208 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:11'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:17:11.214 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:11'.
2025-01-23 16:17:11.216 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:11.219 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:11.228 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:11.234 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:17:11.236 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:17:11.239 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 16.0425ms
2025-01-23 16:17:11.240 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:11.242 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 41.725ms
2025-01-23 16:17:11.257 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:17:11.262 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.0241ms
2025-01-23 16:17:11.267 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:17:11.991 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:11.996 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:11.999 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 8.1667ms
2025-01-23 16:17:12.008 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:12.012 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:12.014 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:12.015 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:12.019 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:12.022 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:17:12.024 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:17:12.025 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 8.1196ms
2025-01-23 16:17:12.027 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:12.028 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 20.6126ms
2025-01-23 16:17:12.038 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:17:12.041 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.5741ms
2025-01-23 16:17:12.045 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:17:14.754 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:14.759 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:14.761 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:14'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:17:14.766 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:14'.
2025-01-23 16:17:14.768 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:14.769 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:14.775 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:14.778 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:17:14.779 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:17:14.782 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 9.6603ms
2025-01-23 16:17:14.783 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:14.784 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 29.7022ms
2025-01-23 16:17:14.793 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:17:14.797 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.4025ms
2025-01-23 16:17:14.800 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:17:14.999 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:15.002 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:15.004 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:15.005 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:15.011 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:15.016 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:17:15.018 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:17:15.020 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 11.3ms
2025-01-23 16:17:15.021 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:15.023 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 24.0716ms
2025-01-23 16:17:15.033 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:17:15.038 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.9751ms
2025-01-23 16:17:15.042 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:17:16.748 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:17:16.754 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:16.757 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 8.323ms
2025-01-23 16:17:16.761 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:17:16.765 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:16.767 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:16'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:17:16.770 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:16'.
2025-01-23 16:17:16.771 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:17:16.772 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:16.777 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:17:16.784 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:16.788 +05:30 [INF] Retrieved 0 movies matching the search title 123
2025-01-23 16:17:16.789 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:17:16.791 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 16.4436ms
2025-01-23 16:17:16.792 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:17:16.793 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 32.6087ms
2025-01-23 16:17:22.234 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:22.239 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:22.241 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 6.8561ms
2025-01-23 16:17:22.256 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:22.260 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:22.264 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:17:22.272 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:22'.
2025-01-23 16:17:22.273 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:22.275 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:22.282 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:22.286 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:17:22.287 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:17:22.289 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 11.3733ms
2025-01-23 16:17:22.291 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:22.293 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 36.9748ms
2025-01-23 16:17:22.305 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:17:22.310 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.2336ms
2025-01-23 16:17:22.315 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:17:22.996 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:23.000 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:23.003 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:23.005 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:23.012 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:23.016 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:17:23.018 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:17:23.019 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 11.1647ms
2025-01-23 16:17:23.021 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:23.023 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 27.1922ms
2025-01-23 16:17:23.037 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:17:23.042 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.4989ms
2025-01-23 16:17:23.045 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:17:23.607 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:17:23.612 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:23.613 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 5.4647ms
2025-01-23 16:17:23.617 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:17:23.621 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:23.623 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:17:23.627 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:23'.
2025-01-23 16:17:23.628 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:17:23.630 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:23.635 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:17:23.640 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:23.643 +05:30 [INF] Retrieved 0 movies matching the search title 123
2025-01-23 16:17:23.644 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:17:23.646 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 14.1297ms
2025-01-23 16:17:23.647 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:17:23.649 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 31.6278ms
2025-01-23 16:17:29.515 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:29.520 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:29.521 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 5.6176ms
2025-01-23 16:17:29.526 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:29.529 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:29.530 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:29'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:17:29.533 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:29'.
2025-01-23 16:17:29.534 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:29.536 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:29.541 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:29.544 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:17:29.545 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:17:29.547 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 9.1147ms
2025-01-23 16:17:29.548 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:29.550 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 23.5796ms
2025-01-23 16:17:47.177 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:47.182 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:47.183 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 6.437ms
2025-01-23 16:17:47.209 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:47.218 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:47.226 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:47'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:17:47.249 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:47'.
2025-01-23 16:17:47.251 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:47.253 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:47.269 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:47.276 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:17:47.282 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:17:47.284 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 20.2277ms
2025-01-23 16:17:47.287 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:47.291 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 81.9756ms
2025-01-23 16:17:47.311 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:17:47.318 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:47.333 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:47.358 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:47.392 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:17:47.397 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.9582ms
2025-01-23 16:17:47.409 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:17:47.415 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:47.422 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:17:47.424 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:17:47.426 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 35.8966ms
2025-01-23 16:17:47.429 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:17:47.431 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 120.0899ms
2025-01-23 16:17:47.448 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:17:47.451 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.2505ms
2025-01-23 16:17:47.455 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:17:48.927 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:17:48.932 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:48.933 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 5.9959ms
2025-01-23 16:17:48.937 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:17:48.941 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:17:48.943 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:17:48.946 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:47:48'.
2025-01-23 16:17:48.947 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:17:48.948 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:17:48.953 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:17:48.960 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:17:48.963 +05:30 [INF] Retrieved 0 movies matching the search title 123
2025-01-23 16:17:48.965 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:17:48.967 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 16.0743ms
2025-01-23 16:17:48.968 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:17:48.970 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 33.086ms
2025-01-23 16:18:00.120 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:18:00.124 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:18:00.125 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 4.7472ms
2025-01-23 16:18:00.130 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:18:00.135 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:18:00.137 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:48:00'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:18:00.142 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:48:00'.
2025-01-23 16:18:00.143 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:18:00.145 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:18:00.151 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:18:00.155 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:18:00.156 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:18:00.158 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 10.1065ms
2025-01-23 16:18:00.160 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:18:00.161 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 30.5286ms
2025-01-23 16:18:00.203 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:18:00.207 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:18:00.209 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:18:00.211 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:18:00.218 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:18:00.222 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:18:00.224 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:18:00.226 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 12.3736ms
2025-01-23 16:18:00.228 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:18:00.229 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 26.4526ms
2025-01-23 16:18:00.236 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:18:00.239 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.1252ms
2025-01-23 16:18:00.243 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:18:00.264 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:18:00.267 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.2078ms
2025-01-23 16:18:00.270 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:18:05.886 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:18:05.892 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:18:05.893 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 204 null null 6.3066ms
2025-01-23 16:18:05.897 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - null null
2025-01-23 16:18:05.902 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:18:05.904 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:48:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:18:05.907 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:48:05'.
2025-01-23 16:18:05.908 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:18:05.909 +05:30 [INF] Route matched with {action = "getSearchMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getSearchMovies(System.String, System.String) on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:18:05.915 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__apiKey_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[userId], [u].[apiKey], [u].[email], [u].[firstName], [u].[lastName], [u].[password], [u].[roleId]
FROM [Users] AS [u]
WHERE [u].[apiKey] = @__apiKey_0
2025-01-23 16:18:05.920 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[@__title_0_startswith='?' (Size = 4000), @__Format_2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE ([m].[movieName] LIKE @__title_0_startswith ESCAPE N'\' OR [m].[movieName] LIKE @__Format_2) AND [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:18:05.922 +05:30 [INF] Retrieved 0 movies matching the search title 123
2025-01-23 16:18:05.924 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`3[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-01-23 16:18:05.926 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi) in 14.2096ms
2025-01-23 16:18:05.928 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getSearchMovies (MoviesApi)'
2025-01-23 16:18:05.930 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-searched-movies?movieTitle=123&apiKey=0fa80e14-a76e-4a3b-8b8d-6b70eb739e1d - 200 null application/json; charset=utf-8 33.0383ms
2025-01-23 16:23:31.069 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:23:31.079 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:23:31.081 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 12.411ms
2025-01-23 16:23:31.089 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:23:31.093 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:23:31.095 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:53:31'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:23:31.099 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:53:31'.
2025-01-23 16:23:31.102 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:31.103 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:23:31.132 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:23:31.135 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:23:31.137 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:23:31.139 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 33.0351ms
2025-01-23 16:23:31.143 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:31.152 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:23:31.157 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 67.8485ms
2025-01-23 16:23:31.162 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:23:31.164 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:31.166 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:23:31.170 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:23:31.173 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.0874ms
2025-01-23 16:23:31.177 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:23:31.182 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:23:31.185 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:23:31.186 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:23:31.187 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 17.9195ms
2025-01-23 16:23:31.189 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:31.190 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 47.0617ms
2025-01-23 16:23:31.201 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:23:31.204 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.2095ms
2025-01-23 16:23:31.207 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:23:36.034 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:23:36.039 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:23:36.041 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:53:36'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:23:36.049 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:53:36'.
2025-01-23 16:23:36.053 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:36.055 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:23:36.065 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:23:36.070 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:23:36.071 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:23:36.073 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 13.2338ms
2025-01-23 16:23:36.075 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:36.078 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 43.9186ms
2025-01-23 16:23:36.102 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:23:36.106 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 4.3237ms
2025-01-23 16:23:36.113 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:23:36.141 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:23:36.147 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:23:36.148 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7014/api/Movie/get-all-movies - 204 null null 7.0681ms
2025-01-23 16:23:36.152 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:23:36.157 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:23:36.158 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:36.159 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:23:36.168 +05:30 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:23:36.171 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:23:36.173 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:23:36.175 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 10.3523ms
2025-01-23 16:23:36.176 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:36.180 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 27.8108ms
2025-01-23 16:23:36.192 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:23:36.198 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 6.0112ms
2025-01-23 16:23:36.202 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:23:37.085 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:23:37.089 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:23:37.090 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:37.092 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:23:37.098 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:23:37.102 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:23:37.103 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:23:37.105 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 8.6143ms
2025-01-23 16:23:37.106 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:37.108 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 23.543ms
2025-01-23 16:23:37.134 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:23:37.137 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:23:37.139 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:53:37'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:23:37.145 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:53:37'.
2025-01-23 16:23:37.148 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:37.149 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:23:37.155 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:23:37.160 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:23:37.161 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:23:37.165 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 12.7167ms
2025-01-23 16:23:37.168 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:37.169 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 35.2576ms
2025-01-23 16:23:37.181 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:23:37.187 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 5.4299ms
2025-01-23 16:23:37.193 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:23:37.198 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:23:37.201 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.6255ms
2025-01-23 16:23:37.204 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:23:39.102 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:23:39.107 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:23:39.109 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:39.111 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:23:39.118 +05:30 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:23:39.132 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:23:39.134 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:23:39.137 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 21.4139ms
2025-01-23 16:23:39.139 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:39.142 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 39.6697ms
2025-01-23 16:23:39.158 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - null null
2025-01-23 16:23:39.163 +05:30 [INF] CORS policy execution successful.
2025-01-23 16:23:39.165 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:53:39'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-01-23 16:23:39.171 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '23-01-2025 09:47:34', Current time (UTC): '23-01-2025 10:53:39'.
2025-01-23 16:23:39.175 +05:30 [INF] Executing endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:39.180 +05:30 [INF] Route matched with {action = "getAllMovies", controller = "Movie"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] getAllMovies() on controller MoviesApi.Controllers.MovieController (MoviesApi).
2025-01-23 16:23:39.197 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [m].[movieId], [m].[genre], [m].[isDeleted], [m].[movieName], [m].[posterImage], [m].[releaseDate]
FROM [Movies] AS [m]
WHERE [m].[isDeleted] = CAST(0 AS bit)
2025-01-23 16:23:39.200 +05:30 [INF] Retrieved 5 movies
2025-01-23 16:23:39.203 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[Domain.Movie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-01-23 16:23:39.207 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:23:39.210 +05:30 [INF] Executed action MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi) in 25.0818ms
2025-01-23 16:23:39.212 +05:30 [INF] Executed endpoint 'MoviesApi.Controllers.MovieController.getAllMovies (MoviesApi)'
2025-01-23 16:23:39.213 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 9.4388ms
2025-01-23 16:23:39.216 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
2025-01-23 16:23:39.219 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/api/Movie/get-all-movies - 200 null application/json; charset=utf-8 60.7633ms
2025-01-23 16:23:39.227 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7014/undefined - null null
2025-01-23 16:23:39.231 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7014/undefined - 404 0 null 3.6177ms
2025-01-23 16:23:39.235 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7014/undefined, Response status code: 404
